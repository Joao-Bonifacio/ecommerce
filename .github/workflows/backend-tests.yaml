name: Backend CI

on:
  push:
    paths:
      - 'backend/**'
  pull_request:
    paths:
      - 'backend/**'

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    defaults:
      run:
        working-directory: backend

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22.16.0'

    - name: Cache node modules
      uses: actions/cache@v3
      with:
        path: backend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('backend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm ci

    - name: Run backend
      run: npm run build

    - name: Start MinIO
      run: |
        docker run -d --name minio -p 9000:9000 -e MINIO_ROOT_USER=${MINIO_ROOT_USER} -e MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD} minio/minio server /data
  
    - name: Install MinIO Client
      run: |
        wget https://dl.min.io/client/mc/release/linux-amd64/mc
        chmod +x mc
        sudo mv mc /usr/local/bin/

    - name: Setup MinIO bucket
      run: |
        mc alias set local http://localhost:9000 ${{ env.MINIO_ROOT_USER }} ${{ env.MINIO_ROOT_PASSWORD }}
        mc mb --ignore-existing local/ecommerce
        mc anonymous set download local/ecommerce

    - name: Wait for MinIO
      run: |
        until curl -s http://localhost:9000/minio/health/live; do
          echo "Waiting for MinIO..."
          sleep 3
        done

    - name: Setup databases
      run: |
        npm run db:mongo
        npm run db:postgres-prod
        npm run db:seed

    - name: Wait for Redis to be ready
      run: |
        for i in {1..30}; do
          if redis-cli -h localhost ping | grep PONG; then
            echo "Redis is up"
            break
          fi
          echo "Waiting for Redis..."
          sleep 2
        done

    - name: Run all tests
      env:
        REDIS_HOST: ${{ secrets.REDIS_HOST }}
        REDIS_DB: ${{ secrets.REDIS_DB }}
        REDIS_PORT: ${{ secrets.REDIS_PORT }}
        MONGODB_URL: ${{ secrets.MONGODB_URL }}
        POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
        S3_BUCKET_NAME: ecommerce
        S3_ENDPOINT: ${{ secrets.MINIO_ENDPOINT }}
        S3_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
        S3_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
      run: npm run test:all
