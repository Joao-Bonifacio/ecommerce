name: Backend CI

on:
  push:
    paths:
      - 'backend/**'
  pull_request:
    paths:
      - 'backend/**'

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    defaults:
      run:
        working-directory: backend

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22.16.0'

    - name: Cache node modules
      uses: actions/cache@v3
      with:
        path: backend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('backend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm ci

    - name: Build backend
      run: npm run build

    - name: Start MinIO
      run: |
        docker run -d --name minio -p 9000:9000 -e MINIO_ROOT_USER=minioadmin -e MINIO_ROOT_PASSWORD=minioadmin123 minio/minio server /data
    - name: Wait for MinIO
      run: |
        until curl -s http://localhost:9000/minio/health/live; do
          echo "Waiting for MinIO..."
          sleep 3
        done

    - name: Setup databases
      run: |
        npm run db:mongo
        npm run db:postgres-prod
        npm run db:seed

    - name: Wait for Redis to be ready
      run: |
        for i in {1..30}; do
          if redis-cli -h localhost ping | grep PONG; then
            echo "Redis is up"
            break
          fi
          echo "Waiting for Redis..."
          sleep 2
        done

    - name: Run all tests
      env:
        REDIS_HOST: localhost
        REDIS_DB: 1
        REDIS_PORT: 6379
        MONGODB_URL: mongodb+srv://jhowmkd:6j1ohzXwch0NfWsx@ecommerce-test.3yis1vx.mongodb.net/?retryWrites=true&w=majority&appName=ecommerce-test
        POSTGRES_URL: postgresql://ecomerce_owner:npg_5QbKjfDXzMu0@ep-red-recipe-a5gxg2lg-pooler.us-east-2.aws.neon.tech/ecomerce?sslmode=require
        MINIO_ENDPOINT: http://localhost:9000
        MINIO_ACCESS_KEY: admin
        MINIO_SECRET_KEY: password123
      run: npm run test:all
